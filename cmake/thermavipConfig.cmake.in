
@PACKAGE_INIT@
include(${CMAKE_CURRENT_LIST_DIR}/thermavip.cmake)

set(THERMAVIP_FOUND true)
set(THERMAVIP_INCLUDE_DIRS ${PACKAGE_PREFIX_DIR}/include ${PACKAGE_PREFIX_DIR}/include/VipLogging ${PACKAGE_PREFIX_DIR}/include/VipDataType ${PACKAGE_PREFIX_DIR}/include/VipPlotting ${PACKAGE_PREFIX_DIR}/include/VipCore ${PACKAGE_PREFIX_DIR}/include/VipGui ${PACKAGE_PREFIX_DIR}/include/VipAnnotation)


math(EXPR BITS "8*${CMAKE_SIZEOF_VOID_P}")
IF(${BITS} MATCHES "64" AND UNIX)
	set_and_check(THERMAVIP_LIB_DIR ${PACKAGE_PREFIX_DIR}/lib64)
ELSE()
	set_and_check(THERMAVIP_LIB_DIR ${PACKAGE_PREFIX_DIR}/lib)
ENDIF()

IF(WIN32)
	set_and_check(THERMAVIP_BIN_DIR ${PACKAGE_PREFIX_DIR}/bin)
ENDIF()

set_and_check(THERMAVIP_APPLICATION_DIR ${PACKAGE_PREFIX_DIR}/thermavip)
set_and_check(THERMAVIP_ICON_DIR ${PACKAGE_PREFIX_DIR}/icons)
set_and_check(THERMAVIP_SKIN_DIR ${PACKAGE_PREFIX_DIR}/skins)
set_and_check(THERMAVIP_PLUGIN_DIR ${PACKAGE_PREFIX_DIR}/thermavip/VipPlugins)

set(THERMAVIP_LIBRARIES_NO_GUI VipLogging VipDataType VipCore VipPlotting)
set(THERMAVIP_LIBRARIES ${THERMAVIP_LIBRARIES_NO_GUI} VipGui VipAnnotation )

# Setup Qt
find_package(QT NAMES Qt5 Qt6 REQUIRED )
find_package(Qt${QT_VERSION_MAJOR} REQUIRED COMPONENTS Widgets OpenGL Core Gui Xml Network Sql PrintSupport Svg)
if(${QT_VERSION_MAJOR} LESS 6)
else()
find_package(Qt6 REQUIRED COMPONENTS Core5Compat)
find_package(Qt6 REQUIRED COMPONENTS OpenGLWidgets)
endif()

set(QT_PREFIX Qt${QT_VERSION_MAJOR})
set(CMAKE_AUTOMOC ON)


if(${QT_VERSION_MAJOR} LESS 6)
set(THERMAVIP_QT_LIBRARIES_NO_GUI Qt5::Core
    Qt5::Gui
    Qt5::Network
	Qt5::Widgets
	Qt5::OpenGL
	Qt5::PrintSupport
    Qt5::Xml
	Qt5::Sql
	Qt5::Svg
	@QT_ADDITIONAL_LIBS@
	)
else()
set(THERMAVIP_QT_LIBRARIES_NO_GUI Qt::Core
    Qt::Gui
    Qt::Network
	Qt::Widgets
	Qt::OpenGL
	Qt::Core5Compat
	Qt::OpenGL
	Qt::OpenGLWidgets
    Qt::Xml
	Qt::Sql
	Qt::Svg
	@QT_ADDITIONAL_LIBS@
	)
endif()

if(NOT "@QT_WEBENGINE_LIBS@" STREQUAL "")
	if(${QT_VERSION_MAJOR} LESS 6)
		set(WEB_ENGINE WebEngine)
	else()
		set(WEB_ENGINE WebEngineCore)
	endif()
	find_package(Qt${QT_VERSION_MAJOR} COMPONENTS ${WEB_ENGINE})
	find_package(Qt${QT_VERSION_MAJOR} COMPONENTS WebEngineWidgets )
	set(THERMAVIP_QT_LIBRARIES ${THERMAVIP_QT_LIBRARIES_NO_GUI})
	list(APPEND THERMAVIP_QT_LIBRARIES @QT_WEBENGINE_LIBS@)
endif()


#VTK
if(@HAS_VTK@)
	find_package(VTK REQUIRED)
	set(THERMAVIP_VTK_LIBRARIES ${VTK_LIBRARIES})
	include_directories(${VTK_INCLUDE_DIRS})

	if(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
		# for msvc, avoid using release VTK with debug STL
		add_compile_definitions(VIP_WITH_VTK)
	endif()
else()
	set(THERMAVIP_VTK_LIBRARIES "")
endif()

if(@HAS_HDF5@)
	find_package (HDF5 COMPONENTS C REQUIRED)
	set(THERMAVIP_HDF5_LIBRARIES ${HDF5_LIBRARIES}})
	include_directories(${HDF5_INCLUDE_DIRS})
else()
	set(THERMAVIP_HDF5_LIBRARIES "")
endif()

if("@QT_WEBENGINE_LIBS@")
	add_compile_definitions(__VIP_USE_WEB_ENGINE)
endif()

check_required_components(thermavip)
